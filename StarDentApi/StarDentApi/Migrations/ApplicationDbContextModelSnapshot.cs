// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarDentApi.Repositories;

#nullable disable

namespace StarDentApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("StarDentApi.Entities.AccesstokenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Accesstoken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Isactive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Refreshtoken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Userid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Accesstokens");
                });

            modelBuilder.Entity("StarDentApi.Entities.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Createduser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Deleteduser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Deletetime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Isactive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Updateduser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("StarDentApi.Entities.RoleprivilegeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Privilege")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RoleID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roleprivileges");
                });

            modelBuilder.Entity("StarDentApi.Entities.TablemetaconfigEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Config")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Meta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tablemetaconfigs");
                });

            modelBuilder.Entity("StarDentApi.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Accessfailcount")
                        .HasColumnType("int");

                    b.Property<string>("Config")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Createduser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Createtime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Deleteduser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Deletetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Isactive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Passwordhash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Passwordsalt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Updateduser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
